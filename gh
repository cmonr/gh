#!/bin/bash -euf

set -o pipefail

readonly action="${1}"
readonly url="${2:-}"
readonly payload_file="${3:-}"

function die()
{
  echo "${1}"
  exit 1
}

function print_limits()
{

  headers=$(
    curl --silent --head \
      --header "Authorization: token ${token}" \
      https://api.github.com/rate_limit \
      | tr -d '\r' 
    )

  # Example data:
  #  X-RateLimit-Limit: 60
  #  X-RateLimit-Remaining: 42
  #  X-RateLimit-Reset: 1539821653

  limit=$(echo "${headers}" | rg "^X-RateLimit-Limit" | cut -d' ' -f2)
  remaining=$(echo "${headers}" | rg "^X-RateLimit-Remaining" | cut -d' ' -f2)

  reset_on=$(echo "${headers}" | rg "^X-RateLimit-Reset" | cut -d' ' -f2)

  secs_until_reset=$(( ${reset_on} - $(date +%s) ))
  time_until_reset=$(date -d @${secs_until_reset} -u "+%H:%M:%S")

  echo "${remaining}/${limit} T-${time_until_reset}"

}

function urlencode()
{
  echo "${1}" \
    | sed -e 's/ /%20/g' \
          -e 's/!/%21/g' \
          -e 's/#/%23/g' \
          -e 's/\$/%24/g' \
          -e "s/'/%27/g" \
          -e 's/(/%28/g' \
          -e 's/)/%29/g'
}


token=$(
  cat ~/.netrc \
    | tr '\n' ' ' \
    | tr -s ' ' \
    | rg "machine github.com" \
    | cut -d' ' -f6 \
    || die "Could not source GitHub token."
  )


case "${action}" in
  get | delete )
    ;;
  post | patch )
    [[ -z "${payload_file}" ]] && die "No post data file provided."
    ;;
  limits )
    print_limits
    exit

    ;;
  *)
    die "Invalid action."
esac

[[ -z "${url}" ]] && die "No url provided."


curl --silent --request $(echo "${action}" | tr '[:lower:]' '[:upper:]') \
  --header "Authorization: token ${token}" \
  --header "Content-Type: application/json" \
  --data @${payload_file} \
  --url $(urlencode "https://api.github.com${url}") 
